openapi: 3.0.3
servers:
  # Added by API Auto Mocking Plugin
  - url: 'http://localhost:8080'
info:
  description: This is a simple API
  version: "1.0.0"
  title: Captcha
  contact:
    email: gilberth89@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: captcha
    description: Api captcha
  - name: biometria
    description: Api images
paths:
  /v1/captcha/settings:
    get:
      tags:
        - captcha
      summary: recover settings captcha
      operationId: getSettings
      description: |
        Set the configuration to generate captcha
      responses:
        '200':
          description: settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsDTO'
        '400':
          description: bad input parameter
    post:
      tags:
        - captcha
      summary: Update settings captcha
      operationId: saveSettings
      responses:
        '200':
          description: settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsDTO'
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsDTO'
        description: validation
  /v1/captcha:
    get:
      tags:
        - captcha
      summary: recovery captcha
      operationId: recoverCaptcha
      description: |
        By passing in the appropriate options, recover the captcha
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Captcha'
        '400':
          description: bad input parameter
  /v1/captcha/validate:
    post:
      tags:
        - captcha
      summary: Validate Captcha
      operationId: validateCaptcha
      responses:
        '200':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation'
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Captcha'
        description: validation
  /v1/image/description:
    get:
      tags:
        - biometria
      summary: Analize the image recover the description of it 
      operationId: imageDescription
      responses:
        '200':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/imageDescription'
        '400':
          description: 'invalid input, object invalid'
      parameters:
      - in: query
        name: url
        schema:
          type: array
          items:
            type: string
          description: urls
components:
  schemas:
    Captcha:
      properties:
        value:
          type: string
        captchaValue:
          type: string
      type: object
    validation:
      properties:
        correct:
          type: boolean
    imageDescription:
      properties:
        faces:
          type: array
          items:
            $ref: '#/components/schemas/person'
        description:
          $ref: '#/components/schemas/captions'
    person:
      properties:
        age:
          type: string
        gender:
          type: string    
    captions:
      properties:
        captions:
          type: array
          items:
            type: object
    SettingsDTO:
      properties:
        captchalength:
          type: integer
          example: 6 q
        attempts:
          type: integer
          example: 3
        caseeSensitive:
          type: boolean
          example: y
        mode:
          type: string
          enum: [ALPHANUMERIC, ALPHA, NUM ]
      type: object